<wiki:toc max_depth="4" />

= Introduction =
This is the troubleshooting page.  Before starting you should understand the [SystemArchitecture#Required_Signaling  Required Signaling].  The Required Signaling page has lots of links to term definitions and generally gives the overview of how things are glued together.

= Basic Commands =

Log into a device
{{{
$ ssh root@<ip of device>

example: ssh root@10.100.0.49
}}}

View a file
{{{
$ cat <filename>
}}}

Edit a file
{{{
$ vi <filename>
}}}
 for more info on vi go [http://www.cs.fsu.edu/general/vimanual.html here]

See what other olsr devices a node has as a neighbor
{{{
$ echo '/links' nc | localhost 2006
}}}

Reboot a device 
{{{
$ reboot && exit
}}}

Check connectivity with another device
{{{
$ ping <ip address>

example: ping 8.8.8.8
}}}

Check DNS and connectivity
{{{
$ ping <url>

example: ping google.com
}}}

List running processes
{{{
$ ps
}}}

Test the download of a web page
{{{
$ wget -s http://<your url here>
}}}

== Operators ==

Pipe: 
{{{
<command> | <other command>
}}}
 Takes the output of the first command and sends it to the input of the next

Double Ampersand:
{{{
<command> && <other command>
}}}
 executes the first command and then the second if the first is successful

[http://www.gnu.org/software/bash/manual/bashref.html Complete Bash reference guide] Note: OpenWRT does  not use a complete/standard bash, so expect only basic things to work.

= Advanced commands and Scripts =

Pull the timestamps for the last day+ (will be more if you had downtime) of "phone home" messages from a default apache log for a particular node at a particular IP.  This is a quick hack to see uptime downtime
{{{
cat /var/log/apache2/access.log | grep "<your IP>" | grep "=<node number>%20" | \
cut -c20-39 | sed 's,\(.*\)/\(.*\)/2011:,\2/\1/2011 ,' | \
sed 's/Jan/01/' | sed 's/Feb/02/' | sed 's/Mar/03/' | sed 's/Apr/04/' | \ 
sed 's/May/05/' | sed 's/Jun/06/' | sed 's/Jul/07/' | sed 's/Aug/08/' | \ 
sed 's/Sep/09/' | sed 's/Oct/10/' | sed 's/Nov/11/' | sed 's/Dec/12/' | \ 
tail -1440
}}}
Note: change the "cut" numbers based on IP address length.  20-39 works for an IP that's xx.xxx.xx.xxx

Pull the timestamps for the last day+ (will be more if you had downtime) of "phone home" messages from our custom-configured apache log for a particular node at a particular IP.  This is a quick hack to see uptime downtime
{{{
cat /var/log/apache2/access.log | grep "<your IP>" | grep "=<node number>%20" | \
cut -c19-38 | tail -1440
}}}
Note: change the "cut" numbers based on IP address length.  20-39 works for an IP that's xx.xxx.xx.xxx.  This gives output with the date and time in two different columns.  

= Headnode Debugging =

  # Check internet connectivity (use ping with IP)
  # Check DNS (use ping with URL)
    _Note: some ISPs will drop or block pings.  If this is the case on your network, use wget instead of ping_
  # Check that squid is running
{{{
$ ps
}}}
then check for a process called 
{{{
squid
}}}

= Client Node Debugging = 

When a client can't long in...
Ask The user: 

  # Can you see JoinAfrica SSID? 
    # How many bars do you have?

If not, is your wireless connection enabled...

If so:

  # What OS are you using? 
  # What browser are you using? 
    # Have user go to help>about and tell you browser version

  # Can the user see the splash page?
    # Can you see login box?
    # Can you see background? 
      # are you seeing an error message instead of background?  If so, what does it say?

If they can see everything ok: 

  # when you log in, how long does it take to return a response?
  # What is the response? (user/pass box just comes back? other?)

What you can do on your end: 

  # Is chilli running?
{{{
$ ps
}}}

  # Does computer see headnode? 
{{{
ping master.mesh
}}}
if fail
{{{
ping 10.100.0.200
}}}

  # Does computer get external DNS
{{{
nslookup google.com
}}}

can you ping xvm?
{{{
ping master.mesh
}}}
if not, can you wget it?
{{{
wget http://master.mesh
}}}
if fail, by IP
{{{ 
wget http://18.181.3.77
}}}

check that /var/resolv.conf.auto has IP of headnode listed in it.
{{{
cat /var/resolv.conf.auto
}}}

if not, restart olsrd on node
{{{
$ /etc/init.d/olsrd restart
}}}