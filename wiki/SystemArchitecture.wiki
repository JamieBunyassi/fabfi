#summary One-sentence summary of this page.

= Introduction =

This is how the system works.  The first section describes the most important things the need to happen for the system to function properly. The rest describes the gory details.  

== Required Signaling ==

  * There are three major components that need to talk to each other for the system to allow user connections:

    # The radius server
    # The headnode
    # The the awesome-chilli program on client access nodes.

In the system setup, The headnode must be configured with the correct IP address of the RADIUS Server.  The headnode then advertises this address at the urls: 
{{{
master.mesh
radius.mesh
map.mesh
}}}
because all the nodes forward DNS requests to their gateway, every node will automatically resolve the above urls to the correct IP without any special configuration.  (Notably, the urls above need to be listed in the 'uamallowed' option in the chilli config for each router. This should be the case by default)

  * When a client access node starts up, it will check its connection to the RADIUS server.  Chilli WILL NOT START if it cannot connect to the RADIUS server.

_Because Chilli provides DHCP to clients, clients will not be able to connect to the wifi if chilli is not running_

_If chilli is started and it loses a connection to the RADIUS server it will continue to run, but will not be able to authenticate clients or show the remotely hosted portion of the splash page_

  * When the headnode finds a gateway to the internet, it advertises itself as a DNS server and an uplink (0.0.0.0) to the rest of the network. (This is done through olsrd-mod-dyn-gw and the /etc/fabfi-scripts/check-uplink script.  
