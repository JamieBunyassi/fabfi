#summary Evaluation summaries of packages, hardware, and processes under consideration in "the next version" of FabFi


The current FabFi version 4.0 includes billing capability, much improved networking monitoring, and the use and testing of Ubiquity devices, was deployed in 2010 in pilot in a community in Kenya. The pilot aimed to establish a self-sustaining-with-growth business that would build and maintain a free-to-fee network. Free-to-fee means their network was designed so that basic access to the internet and educational materials are free and they collect fees only for high speed unrestricted service. They have reached a critical mass of subscribers for self-sustainability and are now tackling growth. In the ensuing months our networks in Afghanistan and Kenya received much press and we have gotten a lot of technical volunteers to develop the system further.

FabFi version 5.0 (slated for late fall 2011) is predominately focused on scaling (to tens and hundreds of thousands of nodes and several hundreds of thousands of devices) and locally hosted educational/informational/contextual content. 

The code name for the version 5.0 project is “schoolnet” (no one likes the name but no one has a better idea – the next closest is free-edu-net). The software and system architecture allows anyone to connect for free for either low-speed, local, or educational content (that you can select and change as a community or a managed operator) while allowing people to chose to pay by-the-hour or by subscription for high speed unrestricted access. The hope is to be able to pay for the “free” with the “fee” parts.

With FabFi 5.0 we’re expecting to have a pretty great infrastructure but we haven’t forgotten that it’s only as good as the content and services available in the network. A substantial part of the development work has to do with the technologies of local caching and mirroring as well as the pedagogical aspects of the content itself.


<wiki:toc max_depth="2" />

= What are the hallmarks of "the next version"? =
  * massively larger number of nodes and devices (order 1000 to 2000)
  * possible large load of rsync/mirror traffic among content servers in the mesh

= Software: Routing =
The order of magnitude increase in the number of devices ...

=== protocol evaluation ===

|| || OLSR IPv4 || B.A.T.M.A.N. IPv4 || OLSR IPv6 || B.A.T.M.A.N. advanced IPv6 ||
|| Previous experience || FabFi, SWUG, BB4ALL || Afrimesh, VT || BB4ALL || Testbed ||
|| Node deploy sizes || ~1000 (Freifunk, Berlin) || ~50 (VT, Cape Town) || ~200 (BB4ALL, .za) || elektra sez <= 50  ||
|| User deploy sizes || ~5000 (Freifunk, Berlin) || ~100 (VT, Cape Town) || ~1000 (BB4ALL, .za) || unknown ||
|| Node Address assignment || Static/Dynamic || Static || RFC2462/OLSR || RFC2462 ||
|| Client Address Assignment || DHCP/NAT || DHCP/NAT || RFC2462/OLSR, niit || RFC2462 ||
|| Node Roaming || No || No || niit, RFC3775, ? || RFC3775 ||
|| Client Mesh Roaming || maybe (Layer3-Chilli) || No || niit, local bat0 || maybe ||
|| Network Segmentation || No || No || Yes || Yes ||
|| UserSpace Plugin API || Yes || No || Yes || No ||
|| Platform Availability || POSIX, WIN32 || LINUX || POSIX, WIN32 || LINUX ||
|| Layer 2 support || Plugin || No || Plugin || Yes ||
|| Programmable gateway selection || Yes || Limited || Yes || Limited ||
|| Ecosystem maturity || ~10 years || ~3 years || ~5 years || ~1 year ||
|| Duplicate addresses || Catastrophic || Catastrophic || Proactive detection || Unknown ||
|| Gateway Control || chilli, plugin, manual || chilli, manual || pepperspot, plugin, manual || chilli, manual ||
|| Management Messaging || plugin/transparent || kludge/limited || plugin/transparent  || kludge/limited ||

= Hardware: RF =
The FabFi projects have historically used Linksys WRT54GL or Ubiquity Nano and Pico stations, all of which are single band devices.

All ubiquiti preferred.  

core: central router.  w/ bridged 5g Nano.  Scales happily to 2000 addresses.

Local DNS served from all triangle nodes.

In ipv6, we expect OLSR to transparently handle local mesh node switches from one triangle gateway to another, while still advertising nodes properly to the non-mesh core.  

== Open Mesh Dual Band (Model #) ==
evaluation goes here

= Hardware: Server =

= Hardware: Power =

= Hardware: Other =